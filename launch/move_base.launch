<launch>
  <arg name="use_scan_filter" default="true"/>
  
  <node pkg="move_base" type="move_base" name="move_base" respawn="false" clear_params="true">
    <!-- Scan topic remapping based on filter usage -->
    <remap if="$(arg use_scan_filter)" from="scan" to="/scan_filtered"/>
    <remap unless="$(arg use_scan_filter)" from="scan" to="/scan"/>
    <remap from="imu" to="/mavros/imu/data"/>
    <remap from="fix" to="/mavros/global_position/global"/>
    <remap from="cmd_vel" to="/mavros/setpoint_velocity/cmd_vel_unstamped"/>
    <param name="base_global_planner" value="global_planner/GlobalPlanner"/>
    <param name="base_local_planner" value="teb_local_planner/TebLocalPlannerROS"/>
    <param name="controller_frequency" value="15.0"/>
    <param name="controller_patience" value="5.0"/>
    <param name="planner_frequency" value="2.0"/>
    <param name="planner_patience" value="10.0"/>
    <param name="oscillation_timeout" value="10.0"/>
    <param name="oscillation_distance" value="0.3"/>
    <param name="recovery_behavior_enabled" value="true"/>
    <param name="transform_timeout" value="1.0"/>
    <param name="tf_buffer_duration" value="30.0"/>
    <param name="use_sim_time" value="false"/>

    <rosparam>
      TebLocalPlannerROS:
        # Topic remapping for PX4/MAVROS
        odom_topic: "/mavros/local_position/odom"  # PX4 odometry topic
        map_frame: "map"
        robot_base_frame: "base_link"
        
        # Global planning parameters
        max_global_plan_lookahead_dist: 8.0        # Increased for better path preview
        global_plan_viapoint_sep: 0.5              # Via points every 50cm
        global_plan_overwrite_orientation: false    # Allow orientation optimization
        max_global_plan_lookahead_dist: 5.0        # Lookahead for local planning
        
        # Robot kinematics - Holonomic drone
        max_vel_x: 0.8                             # Reduced for safety with unstable GPS
        max_vel_x_backwards: 0.8                   # Slower backwards
        max_vel_y: 0.8                             # Lateral velocity for holonomic
        max_vel_theta: 0.4                         # Reduced rotation speed
        
        acc_lim_x: 1.25                             # Smoother acceleration
        acc_lim_y: 1.25
        acc_lim_theta: 1
        
        min_turning_radius: 0.0                    # Holonomic - can turn in place
        wheelbase: 0.0                             # Not a car-like robot
        
        # Trajectory parameters
        xy_goal_tolerance: 0.3                    # 20cm tolerance at goal
        yaw_goal_tolerance: 3.15                   # ~8.5 degrees
        free_goal_vel: false                       # Stop at goal
        
        # Obstacle parameters - CRITICAL for 30cm clearance
        min_obstacle_dist: 0.5                    # 35cm minimum (30cm + 5cm safety)
        inflation_dist: 0.60                       # Inflation distance
        include_costmap_obstacles: true
        costmap_obstacles_behind_robot_dist: 1.0
        obstacle_poses_affected: 40                # More poses for better obstacle handling
        
        # Dynamic obstacle handling
        include_dynamic_obstacles: true
        dynamic_obstacle_inflation_dist: 0.35      # Same as static obstacles
        
        # Footprint model - circular drone
        footprint_model:
          type: "circular"
          radius: 0.15                             # 15cm radius as specified
        
        # Optimization weights - tuned for safety
        weight_kinematics_nh: 1000                 # High weight for holonomic constraints
        weight_kinematics_forward_drive: 0         # Allow omnidirectional
        weight_kinematics_turning_radius: 0
        weight_optimaltime: 1.5                    # Balance speed and safety
        weight_shortest_path: 1
        weight_obstacle: 100.0                     # HIGH priority for obstacle avoidance
        weight_inflation: 10.0                      # Consider inflation zones
        weight_dynamic_obstacle: 100.0             # Same priority for dynamic obstacles
        weight_viapoint: 10.0                      # Follow global path
        weight_adapt_factor: 2.0
        
        # Parallel planning (better performance)
        enable_homotopy_class_planning: false
        enable_multithreading: true
        max_number_classes: 4
        selection_cost_hysteresis: 1.0
        selection_prefer_initial_plan: 0.9
        selection_obst_cost_scale: 100.0           # Prioritize obstacle-free paths
        selection_viapoint_cost_scale: 1.0
        roadmap_graph_no_samples: 15
        roadmap_graph_area_width: 6
        h_signature_prescaler: 0.5
        h_signature_threshold: 0.1
        obstacle_heading_threshold: 0.45
        
        # Recovery behaviors
        shrink_horizon_backup: true
        shrink_horizon_min_duration: 10
        oscillation_recovery: true
        oscillation_v_eps: 0.1
        oscillation_omega_eps: 0.1
        oscillation_recovery_min_duration: 10
        oscillation_filter_duration: 10

      global_costmap:
        global_frame: map
        robot_base_frame: base_link
        update_frequency: 2.0                      # Faster updates for dynamic environment
        publish_frequency: 1.0
        static_map: true
        rolling_window: false
        width: 100.0                               # Larger map area
        height: 100.0
        resolution: 0.1                             # 10cm resolution
        transform_tolerance: 1.0                   # More tolerance for GPS instability
        
        robot_radius: 0.15                         # 15cm drone radius
        
        plugins:
          - {name: static_layer, type: "costmap_2d::StaticLayer"}
          - {name: obstacle_layer, type: "costmap_2d::ObstacleLayer"}
          - {name: inflation_layer, type: "costmap_2d::InflationLayer"}
        
        static_layer:
          enabled: true
          map_topic: "/map"
          subscribe_to_updates: true
        
        obstacle_layer:
          enabled: true
          obstacle_range: 6.0                      # Detection range
          raytrace_range: 8.0                      # Clearing range
          track_unknown_space: true
          observation_sources: scan
          scan:
            sensor_frame: lidar_link
            data_type: LaserScan
            topic: scan  # Will be remapped by move_base node
            marking: true
            clearing: true
            min_obstacle_height: 0.0
            max_obstacle_height: 2.0
            expected_update_rate: 10.0
            observation_persistence: 0.5           # Keep obstacles for 1 second minimum
        
        inflation_layer:
          enabled: true
          inflation_radius: 0.50                   # 50cm inflation (30cm clearance + 20cm buffer)
          cost_scaling_factor: 5.0                 # Aggressive cost scaling

      local_costmap:
        global_frame: odom
        robot_base_frame: base_link
        update_frequency: 15.0                     # High frequency for real-time response
        publish_frequency: 10.0
        static_map: false
        rolling_window: true
        width: 8.0                                 # 8m x 8m local window
        height: 8.0
        resolution: 0.05                           # 5cm resolution for precision
        transform_tolerance: 0.5
        
        robot_radius: 0.15                        # 15cm drone radius
        
        plugins:
          - {name: obstacle_layer, type: "costmap_2d::ObstacleLayer"}
          - {name: inflation_layer, type: "costmap_2d::InflationLayer"}
        
        obstacle_layer:
          enabled: true
          obstacle_range: 5.0                      # 5m detection range
          raytrace_range: 6.0                      # 6m clearing range
          track_unknown_space: true
          combination_method: 1                    # Max method for safety
          observation_sources: scan
          scan:
            sensor_frame: lidar_link
            data_type: LaserScan
            topic: scan  # Will be remapped by move_base node
            marking: true
            clearing: true
            min_obstacle_height: 0.0
            max_obstacle_height: 2.0
            inf_is_valid: true
            expected_update_rate: 10.0
            observation_persistence: 0.5           # Keep obstacles for 1 second minimum
            clearing: true
            marking: true
        
        inflation_layer:
          enabled: true
          inflation_radius: 0.50                   # 50cm total (30cm clearance + 20cm buffer)
          cost_scaling_factor: 10.0                # Aggressive scaling for safety

      GlobalPlanner:
        allow_unknown: true                        # Navigate through unknown areas
        default_tolerance: 0.2
        use_dijkstra: false                       # Use A* for better performance
        use_quadratic: true
        use_grid_path: false
        old_navfn_behavior: false
        
        # Cost parameters
        cost_factor: 0.55
        neutral_cost: 66
        lethal_cost: 253
        unknown_cost_value: 255                    # Treat unknown as obstacle for safety
        
        publish_potential: true
        orientation_mode: 1                        # Forward orientation
        orientation_window_size: 1

      move_base:
        controller_frequency: 15.0                 # 15Hz control loop
        controller_patience: 5.0                   # 5s patience before recovery
        planner_frequency: 2.0                     # Replan every 0.5s
        planner_patience: 5.0
        oscillation_timeout: 10.0
        oscillation_distance: 0.3
        
        # Recovery behaviors
        recovery_behavior_enabled: true
        recovery_behaviors:
          - name: conservative_reset
            type: clear_costmap_recovery/ClearCostmapRecovery
          - name: rotate_recovery
            type: rotate_recovery/RotateRecovery
          - name: aggressive_reset
            type: clear_costmap_recovery/ClearCostmapRecovery
        
        conservative_reset:
          reset_distance: 3.0
          layer_names: ["obstacle_layer"]
        
        aggressive_reset:
          reset_distance: 0.5
          layer_names: ["obstacle_layer"]
        
        rotate_recovery:
          sim_granularity: 0.017
          min_rotational_vel: 0.2
          max_rotational_vel: 0.5
          acc_lim_theta: 0.8

    </rosparam>
  </node>
</launch>

