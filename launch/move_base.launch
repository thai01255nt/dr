<launch>
  <node pkg="move_base" type="move_base" name="move_base" respawn="false" clear_params="true">
    <remap from="scan" to="/scan"/>
    <remap from="imu" to="/mavros/imu/data"/>
    <remap from="fix" to="/mavros/global_position/global"/>
    <remap from="cmd_vel" to="/mavros/setpoint_velocity/cmd_vel_unstamped"/>
    <param name="base_global_planner" value="global_planner/GlobalPlanner"/>
    <param name="base_local_planner" value="teb_local_planner/TebLocalPlannerROS"/>
    <param name="controller_frequency" value="10.0"/>
    <param name="controller_patience" value="15.0"/>
    <param name="planner_frequency" value="1.0"/>
    <param name="planner_patience" value="10.0"/>
    <param name="oscillation_timeout" value="10.0"/>
    <param name="oscillation_distance" value="0.2"/>
    <param name="recovery_behavior_enabled" value="true"/>
    <param name="transform_timeout" value="1.0"/>
    <param name="tf_buffer_duration" value="30.0"/>

    <rosparam>
      # teb_local_planner_params.yaml
      TebLocalPlannerROS:
        odom_topic: "/odom"                 # REMAP nếu bạn dùng mavros (/mavros/local_position/odom) hoặc pose
        map_frame: "map"
        robot_frame: "base_link"
        # planning
        max_global_plan_lookahead_dist: 8.0
        global_plan_viapoint_sep: 0.5
        max_local_plan_lookahead_dist: 4.0
        feasibility_check_no_poses: false
        # holonomic (Iris can strafe => allow holonomic behavior)
        odom_use_init_vel: true
        allow_init_with_backwards_motion: false
        max_vel_x: 1.5
        max_vel_x_backwards: 0.8
        max_vel_y: 1.5
        max_vel_theta: 1.0
        acc_lim_x: 2.0
        acc_lim_y: 2.0
        acc_lim_theta: 2.0
        min_turning_radius: 0.0
        dt_ref: 0.3
        dt_hysteresis: 0.1
        teb_autosize: true
        dt_obst: 0.05
        weight_kinematics_nh: 1000.0
        weight_kinematics_forward_drive: 2.0
        weight_kinematics_turning_radius: 1.0
        weight_obstacle: 50.0
        weight_dynamic_obstacle: 50.0
        weight_viapoint: 1.0
        weight_goal_distance: 3.0
        weight_path_distance: 1.5
        weight_optimaltime: 1.0
        min_obstacle_dist: 0.25
        include_costmap_obstacles: true
        costmap_obstacles_behind_robot_dist: 1.0
        obstacle_poses_affected: 30
        footprint_model: "circular"
        footprint_circular_radius: 0.15
        feasibility_check_no_poses: false
        publish_feedback: true
        controller_frequency: 10.0
        xy_goal_tolerance: 0.2        # 20cm
        yaw_goal_tolerance: 0.1       # ~5.7 độ
        free_goal_vel: false          # false = dừng hẳn tại goal
      # Global Costmap for GlobalPlanner - uses /map
      global_costmap:
        global_frame: map
        robot_base_frame: base_link
        update_frequency: 1.0
        publish_frequency: 0.5
        rolling_window: false
        width: 50.0
        height: 50.0
        resolution: 0.1
        transform_tolerance: 2.0
        plugins:
            - {name: static_layer, type: "costmap_2d::StaticLayer"}
            - {name: inflation_layer, type: "costmap_2d::InflationLayer"}
        static_layer:
          enabled: true
          map_topic: /map
          subscribe_to_updates: true
        inflation_layer:
          enabled: true
          inflation_radius: 0.5
          cost_scaling_factor: 3.0
      GlobalPlanner:
        allow_unknown: true
        use_dijkstra: true
        use_quadratic: true
        use_grid_path: false
        old_navfn_behavior: true
        cost_factor: 1.0
        neutral_cost: 1
        lethal_cost: 253
        unknown_cost_value: 255
        publish_potential: false
        default_tolerance: 0.5
      local_costmap:
        global_frame: odom
        robot_base_frame: base_link
        update_frequency: 10.0        # Increased for better real-time response
        publish_frequency: 5.0        # Publish rate for visualization
        rolling_window: true          # Rolling window follows robot
        width: 6.0                    # Larger window for better lookahead
        height: 6.0
        resolution: 0.05              # High resolution 5cm
        transform_tolerance: 0.5      # Tighter tolerance for accuracy
        plugins:
            - {name: obstacle_laser, type: "costmap_2d::ObstacleLayer"}
            - {name: inflation_layer, type: "costmap_2d::InflationLayer"}
        inflation_layer:
          enabled: true
          inflation_radius: 0.5
          cost_scaling_factor: 3.0
        obstacle_laser:
          enabled: true
          observation_sources: scan
          track_unkown_space: true
          scan:
            sensor_frame: lidar_link
            data_type: LaserScan
            topic: scan                    # Real-time lidar for obstacle detection
            marking: true                   # Mark new obstacles
            clearing: true                  # Clear free space
            max_obstacle_height: 3.0        # Height limit for obstacles
            min_obstacle_height: 0.0
            obstacle_range: 5.0             # Detection range for obstacles
            raytrace_range: 8.0             # Range for clearing free space
            inf_is_valid: true             # Ignore infinite readings
            expected_update_rate: 10.0      # Expected lidar update rate
            observation_persistence: 0.0    # How long to keep observations
            transform_tolerance: 0.5        # Transform timeout
    </rosparam>
  </node>
</launch>
