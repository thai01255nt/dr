<?xml version="1.0"?>
<robot name="px4_drone" xmlns:xacro="http://www.ros.org/wiki/xacro">

  <!-- Properties -->
  <xacro:property name="namespace" value="" />
  <xacro:property name="rotor_velocity_slowdown_sim" value="10" />
  <xacro:property name="mesh_file" value="package://rotors_description/meshes/firefly.dae" />
  <xacro:property name="mesh_scale" value="1 1 1"/>
  <xacro:property name="mass" value="1.5" />
  <xacro:property name="body_width" value="0.47" />
  <xacro:property name="body_height" value="0.11" />
  <xacro:property name="mass_rotor" value="0.005" />
  <xacro:property name="radius_rotor" value="0.128" />
  <xacro:property name="motor_constant" value="8.54858e-06" />
  <xacro:property name="moment_constant" value="0.016" />
  <xacro:property name="time_constant_up" value="0.0125" />
  <xacro:property name="time_constant_down" value="0.025" />
  <xacro:property name="max_rot_velocity" value="838" />
  <xacro:property name="sin30" value="0.5" />
  <xacro:property name="cos30" value="0.866025403784" />
  <xacro:property name="rotor_drag_coefficient" value="8.06428e-05" />
  <xacro:property name="rolling_moment_coefficient" value="1e-06" />

  <!-- Drone body -->
  <link name="base_link">
    <inertial>
      <mass value="${mass}" />
      <origin xyz="0 0 0" rpy="0 0 0" />
      <inertia ixx="0.0347563" ixy="0.0" ixz="0.0" iyy="0.0458929" iyz="0.0" izz="0.0977" />
    </inertial>
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <mesh filename="package://rotors_description/meshes/firefly.dae" scale="${mesh_scale}" />
      </geometry>
    </visual>
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <box size="${body_width} 0.635 ${body_height}" />
      </geometry>
    </collision>
  </link>

  <!-- Rotors -->
  <xacro:macro name="vertical_rotor" params="robot_namespace suffix direction motor_constant moment_constant parent mass_rotor radius_rotor time_constant_up time_constant_down max_rot_velocity motor_number rotor_drag_coefficient rolling_moment_coefficient color use_own_mesh mesh prop_scale *origin *inertia">
    <link name="rotor_${motor_number}">
      <inertial>
        <mass value="${mass_rotor}" />
        <xacro:insert_block name="inertia" />
      </inertial>
      <visual>
        <geometry>
          <cylinder length="0.005" radius="${radius_rotor}"/>
        </geometry>
        <material name="${color}">
          <color rgba="0.2 0.2 0.2 1"/>
        </material>
      </visual>
      <collision>
        <geometry>
          <cylinder length="0.005" radius="${radius_rotor}" />
        </geometry>
      </collision>
    </link>
    <joint name="rotor_${motor_number}_joint" type="continuous">
      <xacro:insert_block name="origin" />
      <axis xyz="0 0 1" />
      <parent link="${parent}" />
      <child link="rotor_${motor_number}" />
    </joint>
    <gazebo>
      <plugin name="${suffix}_motor_model" filename="libgazebo_motor_model.so">
        <robotNamespace>${robot_namespace}</robotNamespace>
        <jointName>rotor_${motor_number}_joint</jointName>
        <linkName>rotor_${motor_number}</linkName>
        <turningDirection>${direction}</turningDirection>
        <timeConstantUp>${time_constant_up}</timeConstantUp>
        <timeConstantDown>${time_constant_down}</timeConstantDown>
        <maxRotVelocity>${max_rot_velocity}</maxRotVelocity>
        <motorConstant>${motor_constant}</motorConstant>
        <momentConstant>${moment_constant}</momentConstant>
        <commandSubTopic>/gazebo/command/motor_speed</commandSubTopic>
        <motorNumber>${motor_number}</motorNumber>
        <rotorDragCoefficient>${rotor_drag_coefficient}</rotorDragCoefficient>
        <rollingMomentCoefficient>${rolling_moment_coefficient}</rollingMomentCoefficient>
        <motorSpeedPubTopic>/motor_speed/${motor_number}</motorSpeedPubTopic>
        <rotorVelocitySlowdownSim>${rotor_velocity_slowdown_sim}</rotorVelocitySlowdownSim>
      </plugin>
    </gazebo>
  </xacro:macro>

  <!-- Rotor 0 -->
  <xacro:vertical_rotor
    robot_namespace="${namespace}"
    suffix="front_right"
    direction="ccw"
    motor_constant="${motor_constant}"
    moment_constant="${moment_constant}"
    parent="base_link"
    mass_rotor="${mass_rotor}"
    radius_rotor="${radius_rotor}"
    time_constant_up="${time_constant_up}"
    time_constant_down="${time_constant_down}"
    max_rot_velocity="${max_rot_velocity}"
    motor_number="0"
    rotor_drag_coefficient="${rotor_drag_coefficient}"
    rolling_moment_coefficient="${rolling_moment_coefficient}"
    color="blue"
    use_own_mesh="false"
    mesh=""
    prop_scale="1">
    <origin xyz="0.13 -0.22 0.023" rpy="0 0 0" />
    <inertia
      ixx="0.000001" ixy="0.0" ixz="0.0"
      iyy="0.000001" iyz="0.0"
      izz="0.000001" />
  </xacro:vertical_rotor>

  <!-- Rotor 1 -->
  <xacro:vertical_rotor
    robot_namespace="${namespace}"
    suffix="back_left"
    direction="ccw"
    motor_constant="${motor_constant}"
    moment_constant="${moment_constant}"
    parent="base_link"
    mass_rotor="${mass_rotor}"
    radius_rotor="${radius_rotor}"
    time_constant_up="${time_constant_up}"
    time_constant_down="${time_constant_down}"
    max_rot_velocity="${max_rot_velocity}"
    motor_number="1"
    rotor_drag_coefficient="${rotor_drag_coefficient}"
    rolling_moment_coefficient="${rolling_moment_coefficient}"
    color="darkgrey"
    use_own_mesh="false"
    mesh=""
    prop_scale="1">
    <origin xyz="-0.13 0.2 0.023" rpy="0 0 0" />
    <inertia
      ixx="0.000001" ixy="0.0" ixz="0.0"
      iyy="0.000001" iyz="0.0"
      izz="0.000001" />
  </xacro:vertical_rotor>

  <!-- Rotor 2 -->
  <xacro:vertical_rotor
    robot_namespace="${namespace}"
    suffix="front_left"
    direction="cw"
    motor_constant="${motor_constant}"
    moment_constant="${moment_constant}"
    parent="base_link"
    mass_rotor="${mass_rotor}"
    radius_rotor="${radius_rotor}"
    time_constant_up="${time_constant_up}"
    time_constant_down="${time_constant_down}"
    max_rot_velocity="${max_rot_velocity}"
    motor_number="2"
    rotor_drag_coefficient="${rotor_drag_coefficient}"
    rolling_moment_coefficient="${rolling_moment_coefficient}"
    color="blue"
    use_own_mesh="false"
    mesh=""
    prop_scale="1">
    <origin xyz="0.13 0.22 0.023" rpy="0 0 0" />
    <inertia
      ixx="0.000001" ixy="0.0" ixz="0.0"
      iyy="0.000001" iyz="0.0"
      izz="0.000001" />
  </xacro:vertical_rotor>

  <!-- Rotor 3 -->
  <xacro:vertical_rotor
    robot_namespace="${namespace}"
    suffix="back_right"
    direction="cw"
    motor_constant="${motor_constant}"
    moment_constant="${moment_constant}"
    parent="base_link"
    mass_rotor="${mass_rotor}"
    radius_rotor="${radius_rotor}"
    time_constant_up="${time_constant_up}"
    time_constant_down="${time_constant_down}"
    max_rot_velocity="${max_rot_velocity}"
    motor_number="3"
    rotor_drag_coefficient="${rotor_drag_coefficient}"
    rolling_moment_coefficient="${rolling_moment_coefficient}"
    color="darkgrey"
    use_own_mesh="false"
    mesh=""
    prop_scale="1">
    <origin xyz="-0.13 -0.2 0.023" rpy="0 0 0" />
    <inertia
      ixx="0.000001" ixy="0.0" ixz="0.0"
      iyy="0.000001" iyz="0.0"
      izz="0.000001" />
  </xacro:vertical_rotor>

  <!-- IMU link -->
  <link name="imu_link">
    <inertial>
      <inertia ixx="0.00001" ixy="0.0" ixz="0.0" iyy="0.00001" iyz="0.0" izz="0.00001" />
      <mass value="0.015" />
    </inertial>
  </link>

  <joint name="imu_joint" type="fixed">
    <parent link="base_link" />
    <child link="imu_link" />
    <origin xyz="0 0 0" rpy="0 0 0" />
  </joint>

  <!-- LIDAR link -->
  <link name="lidar_link">
    <inertial>
      <mass value="0.1"/>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <inertia ixx="0.0001" ixy="0.0" ixz="0.0" iyy="0.0001" iyz="0.0" izz="0.0001"/>
    </inertial>
    <visual>
      <geometry>
        <cylinder radius="0.05" length="0.05"/>
      </geometry>
      <material name="black">
        <color rgba="0.2 0.2 0.2 1"/>
      </material>
    </visual>
    <collision>
      <geometry>
        <cylinder radius="0.05" length="0.05"/>
      </geometry>
    </collision>
  </link>

  <joint name="lidar_joint" type="fixed">
    <parent link="base_link"/>
    <child link="lidar_link"/>
    <origin xyz="0 0 0.15" rpy="0 0 0"/>
  </joint>

  <!-- GPS link -->
  <link name="gps_link">
    <inertial>
      <mass value="0.005"/>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <inertia ixx="0.00001" ixy="0.0" ixz="0.0" iyy="0.00001" iyz="0.0" izz="0.00001"/>
    </inertial>
  </link>

  <joint name="gps_joint" type="fixed">
    <parent link="base_link"/>
    <child link="gps_link"/>
    <origin xyz="-0.05 0 0.08" rpy="0 0 0"/>
  </joint>

  <!-- Camera link -->
  <link name="camera_link">
    <inertial>
      <mass value="0.02"/>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <inertia ixx="0.00001" ixy="0.0" ixz="0.0" iyy="0.00001" iyz="0.0" izz="0.00001"/>
    </inertial>
    <visual>
      <geometry>
        <box size="0.05 0.05 0.05"/>
      </geometry>
      <material name="red">
        <color rgba="0.8 0.2 0.2 1"/>
      </material>
    </visual>
    <collision>
      <geometry>
        <box size="0.05 0.05 0.05"/>
      </geometry>
    </collision>
  </link>

  <joint name="camera_joint" type="fixed">
    <parent link="base_link"/>
    <child link="camera_link"/>
    <origin xyz="0 0 -0.1" rpy="0 1.5708 0"/>
  </joint>

  <!-- Landing Gear -->
  <xacro:macro name="landing_leg" params="name x y">
    <link name="${name}">
      <inertial>
        <mass value="0.05"/>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <inertia ixx="0.00001" ixy="0.0" ixz="0.0" iyy="0.00001" iyz="0.0" izz="0.00001"/>
      </inertial>
      <visual>
        <geometry>
          <cylinder radius="0.01" length="0.15"/>
        </geometry>
        <material name="grey">
          <color rgba="0.5 0.5 0.5 1"/>
        </material>
      </visual>
      <collision>
        <geometry>
          <cylinder radius="0.01" length="0.15"/>
        </geometry>
      </collision>
    </link>

    <joint name="${name}_joint" type="fixed">
      <parent link="base_link"/>
      <child link="${name}"/>
      <origin xyz="${x} ${y} -0.13" rpy="0 0 0"/>
    </joint>

    <!-- Landing foot -->
    <link name="${name}_foot">
      <inertial>
        <mass value="0.01"/>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <inertia ixx="0.00001" ixy="0.0" ixz="0.0" iyy="0.00001" iyz="0.0" izz="0.00001"/>
      </inertial>
      <visual>
        <geometry>
          <sphere radius="0.02"/>
        </geometry>
        <material name="black">
          <color rgba="0.2 0.2 0.2 1"/>
        </material>
      </visual>
      <collision>
        <geometry>
          <sphere radius="0.02"/>
        </geometry>
      </collision>
    </link>

    <joint name="${name}_foot_joint" type="fixed">
      <parent link="${name}"/>
      <child link="${name}_foot"/>
      <origin xyz="0 0 -0.075" rpy="0 0 0"/>
    </joint>
  </xacro:macro>

  <!-- 4 landing legs -->
  <xacro:landing_leg name="leg_front_right" x="0.15" y="-0.15"/>
  <xacro:landing_leg name="leg_front_left" x="0.15" y="0.15"/>
  <xacro:landing_leg name="leg_back_right" x="-0.15" y="-0.15"/>
  <xacro:landing_leg name="leg_back_left" x="-0.15" y="0.15"/>

  <!-- ==================
       Gazebo Sensors
  ================== -->

  <!-- IMU Sensor -->
  <gazebo reference="imu_link">
    <sensor name="imu_sensor" type="imu">
      <always_on>true</always_on>
      <update_rate>250</update_rate>
      <visualize>true</visualize>
      <topic>__default_topic__</topic>
      <plugin filename="libgazebo_imu_plugin.so" name="imu_plugin">
        <robotNamespace>${namespace}</robotNamespace>
        <linkName>imu_link</linkName>
        <imuTopic>/imu</imuTopic>
        <gyroscopeNoiseDensity>0.0003394</gyroscopeNoiseDensity>
        <gyroscopeRandomWalk>3.8785e-05</gyroscopeRandomWalk>
        <gyroscopeBiasCorrelationTime>1000.0</gyroscopeBiasCorrelationTime>
        <gyroscopeTurnOnBiasSigma>0.0087</gyroscopeTurnOnBiasSigma>
        <accelerometerNoiseDensity>0.004</accelerometerNoiseDensity>
        <accelerometerRandomWalk>0.006</accelerometerRandomWalk>
        <accelerometerBiasCorrelationTime>300.0</accelerometerBiasCorrelationTime>
        <accelerometerTurnOnBiasSigma>0.196</accelerometerTurnOnBiasSigma>
      </plugin>
    </sensor>
  </gazebo>

  <!-- LIDAR Sensor -->
  <gazebo reference="lidar_link">
    <sensor type="ray" name="hokuyo">
      <pose>0 0 0 0 0 0</pose>
      <visualize>false</visualize>
      <update_rate>20</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>720</samples>
            <resolution>1</resolution>
            <min_angle>-3.14159265</min_angle>
            <max_angle>3.14159265</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.10</min>
          <max>30.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_laser.so">
        <topicName>/scan</topicName>
        <frameName>lidar_link</frameName>
      </plugin>
    </sensor>
  </gazebo>

  <!-- GPS Sensor -->
  <gazebo reference="gps_link">
    <sensor name="gps_sensor" type="gps">
      <always_on>true</always_on>
      <update_rate>10</update_rate>
      <plugin name="gps_plugin" filename="libgazebo_gps_plugin.so">
        <robotNamespace>${namespace}</robotNamespace>
        <gpsNoise>true</gpsNoise>
        <gpsXYRandomWalk>2.0</gpsXYRandomWalk>
        <gpsZRandomWalk>4.0</gpsZRandomWalk>
        <gpsXYNoiseDensity>2.0e-4</gpsXYNoiseDensity>
        <gpsZNoiseDensity>4.0e-4</gpsZNoiseDensity>
        <gpsVXYNoiseDensity>0.2</gpsVXYNoiseDensity>
        <gpsVZNoiseDensity>0.4</gpsVZNoiseDensity>
      </plugin>
    </sensor>
  </gazebo>

  <!-- Camera Sensor -->
  <gazebo reference="camera_link">
    <sensor type="camera" name="camera">
      <update_rate>30.0</update_rate>
      <camera name="head">
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>800</width>
          <height>800</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>camera</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>camera_link</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>

  <!-- ==================
       PX4 Plugins
  ================== -->

  <!-- MAVLink Interface -->
  <gazebo>
    <plugin name="mavlink_interface" filename="libgazebo_mavlink_interface.so">
      <robotNamespace>${namespace}</robotNamespace>
      <imuSubTopic>/imu</imuSubTopic>
      <gpsSubTopic>/gps</gpsSubTopic>
      <mavlink_addr>INADDR_ANY</mavlink_addr>
      <mavlink_udp_port>14560</mavlink_udp_port>
      <serialEnabled>false</serialEnabled>
      <serialDevice>/dev/ttyACM0</serialDevice>
      <baudRate>921600</baudRate>
      <qgc_addr>INADDR_ANY</qgc_addr>
      <qgc_udp_port>14550</qgc_udp_port>
      <sdk_addr>INADDR_ANY</sdk_addr>
      <sdk_udp_port>14540</sdk_udp_port>
      <hil_mode>false</hil_mode>
      <hil_state_level>false</hil_state_level>
      <enable_lockstep>true</enable_lockstep>
      <use_tcp>true</use_tcp>
      <motorSpeedCommandPubTopic>/gazebo/command/motor_speed</motorSpeedCommandPubTopic>
      <control_channels>
        <channel name="rotor1">
          <input_index>0</input_index>
          <input_offset>0</input_offset>
          <input_scaling>1000</input_scaling>
          <zero_position_disarmed>0</zero_position_disarmed>
          <zero_position_armed>100</zero_position_armed>
          <joint_control_type>velocity</joint_control_type>
        </channel>
        <channel name="rotor2">
          <input_index>1</input_index>
          <input_offset>0</input_offset>
          <input_scaling>1000</input_scaling>
          <zero_position_disarmed>0</zero_position_disarmed>
          <zero_position_armed>100</zero_position_armed>
          <joint_control_type>velocity</joint_control_type>
        </channel>
        <channel name="rotor3">
          <input_index>2</input_index>
          <input_offset>0</input_offset>
          <input_scaling>1000</input_scaling>
          <zero_position_disarmed>0</zero_position_disarmed>
          <zero_position_armed>100</zero_position_armed>
          <joint_control_type>velocity</joint_control_type>
        </channel>
        <channel name="rotor4">
          <input_index>3</input_index>
          <input_offset>0</input_offset>
          <input_scaling>1000</input_scaling>
          <zero_position_disarmed>0</zero_position_disarmed>
          <zero_position_armed>100</zero_position_armed>
          <joint_control_type>velocity</joint_control_type>
        </channel>
      </control_channels>
    </plugin>
  </gazebo>

  <!-- Multirotor base plugin -->
  <gazebo>
    <plugin name="multirotor_base_plugin" filename="libgazebo_multirotor_base_plugin.so">
      <robotNamespace>${namespace}</robotNamespace>
      <linkName>base_link</linkName>
      <rotorVelocitySlowdownSim>${rotor_velocity_slowdown_sim}</rotorVelocitySlowdownSim>
    </plugin>
  </gazebo>

  <!-- Ground truth plugin -->
  <gazebo>
    <plugin name="groundtruth_plugin" filename="libgazebo_groundtruth_plugin.so">
      <robotNamespace>${namespace}</robotNamespace>
    </plugin>
  </gazebo>

  <!-- Magnetometer plugin -->
  <gazebo>
    <plugin name="magnetometer_plugin" filename="libgazebo_magnetometer_plugin.so">
      <robotNamespace>${namespace}</robotNamespace>
      <pubRate>100</pubRate>
      <noiseDensity>0.0004</noiseDensity>
      <randomWalk>6.4e-06</randomWalk>
      <biasCorrelationTime>600</biasCorrelationTime>
      <magTopic>/mag</magTopic>
    </plugin>
  </gazebo>

  <!-- Barometer plugin -->
  <gazebo>
    <plugin name="barometer_plugin" filename="libgazebo_barometer_plugin.so">
      <robotNamespace>${namespace}</robotNamespace>
      <pubRate>50</pubRate>
      <baroTopic>/baro</baroTopic>
      <baroDriftPaPerSec>0</baroDriftPaPerSec>
    </plugin>
  </gazebo>

</robot>
